{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Purpose Apart from our Mail-IT-Wize web application, we also offer a RESTful API which provides endpoints for processing, printing documents and envelopes, and finally sending the document to your recipient. The API also has options in place for handling return mail. Our API can be divided into 2 large components: sending documents along with metadata (Intake request) and consulting previously sent documents (Resource request). Authentication and security All HTTP requests and responses use SSL. Any API requests sent over unencrypted HTTP will not be honoured. These requests will not receive any response, and will time out. For authentication, we use an implementation of OAuth2. Managing access tokens Access tokens are managed by the users, via the API's web portal. These tokens always have a lifetime of 365 days, and are linked to one specific user. Upon expiration, the API will return an \"Unauthenticated\" error upon subsequent requests with said token. An implementation for refreshing tokens/retrieving a new access token via the API itself is under construction. Components Intake request Contains the main document, background (optional), envelope (optional), attachments (optional) together with all required metadata (address, recipient, document name, ...) Important: each intake request contains exactly 1 main document and 1 recipient. Bulk sending in a single request is currently not supported. Resource request A resource request can be used to consult previously sent Intake requests. API base URL and versioning There is currently a single version available for the API in both UAT and PROD. This is v1. If a new version is introduced, the previous one will remain active for backwards compatibility. All API users will be notified of new releases. Base URL for PROD: https://api.mailitwize.be/api/v1 Base URL for UAT: https://api-test.mailitwize.be/api/v1 Technical specification These docs serve as a general introduction and manual for usage of the API. For more detailed specs on all available API functionality, we suggest taking a look at our Swagger .","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#purpose","text":"Apart from our Mail-IT-Wize web application, we also offer a RESTful API which provides endpoints for processing, printing documents and envelopes, and finally sending the document to your recipient. The API also has options in place for handling return mail. Our API can be divided into 2 large components: sending documents along with metadata (Intake request) and consulting previously sent documents (Resource request).","title":"Purpose"},{"location":"#authentication-and-security","text":"All HTTP requests and responses use SSL. Any API requests sent over unencrypted HTTP will not be honoured. These requests will not receive any response, and will time out. For authentication, we use an implementation of OAuth2.","title":"Authentication and security"},{"location":"#managing-access-tokens","text":"Access tokens are managed by the users, via the API's web portal. These tokens always have a lifetime of 365 days, and are linked to one specific user. Upon expiration, the API will return an \"Unauthenticated\" error upon subsequent requests with said token. An implementation for refreshing tokens/retrieving a new access token via the API itself is under construction.","title":"Managing access tokens"},{"location":"#components","text":"","title":"Components"},{"location":"#intake-request","text":"Contains the main document, background (optional), envelope (optional), attachments (optional) together with all required metadata (address, recipient, document name, ...) Important: each intake request contains exactly 1 main document and 1 recipient. Bulk sending in a single request is currently not supported.","title":"Intake request"},{"location":"#resource-request","text":"A resource request can be used to consult previously sent Intake requests.","title":"Resource request"},{"location":"#api-base-url-and-versioning","text":"There is currently a single version available for the API in both UAT and PROD. This is v1. If a new version is introduced, the previous one will remain active for backwards compatibility. All API users will be notified of new releases. Base URL for PROD: https://api.mailitwize.be/api/v1 Base URL for UAT: https://api-test.mailitwize.be/api/v1","title":"API base URL and versioning"},{"location":"#technical-specification","text":"These docs serve as a general introduction and manual for usage of the API. For more detailed specs on all available API functionality, we suggest taking a look at our Swagger .","title":"Technical specification"},{"location":"estimate_json/","text":"JSON Estimate request Endpoint and method API version v1 Endpoint base_url/api_version/intake/estimate Method POST Request header Header Value Accept application/json Authorization Bearer [token] Request body and document format The request body and format for an Estimate request are the exact same as the JSON Intake Request. Please refer to the JSON Intake documentation .","title":"JSON Intake Estimate"},{"location":"estimate_json/#json-estimate-request","text":"","title":"JSON Estimate request"},{"location":"estimate_json/#endpoint-and-method","text":"API version v1 Endpoint base_url/api_version/intake/estimate Method POST","title":"Endpoint and method"},{"location":"estimate_json/#request-header","text":"Header Value Accept application/json Authorization Bearer [token]","title":"Request header"},{"location":"estimate_json/#request-body-and-document-format","text":"The request body and format for an Estimate request are the exact same as the JSON Intake Request. Please refer to the JSON Intake documentation .","title":"Request body and document format"},{"location":"estimate_multipart/","text":"Multipart Estimate request Endpoint and method API version v1 Endpoint base_url/api_version/intake/estimate/multipart Method POST Request header Header Value Accept application/json Authorization Bearer [token] Request body and document format The request body and format for an Estimate request are the exact same as the Multipart Intake Request. Please refer to the Multipart Intake documentation .","title":"Multipart Intake Estimate"},{"location":"estimate_multipart/#multipart-estimate-request","text":"","title":"Multipart Estimate request"},{"location":"estimate_multipart/#endpoint-and-method","text":"API version v1 Endpoint base_url/api_version/intake/estimate/multipart Method POST","title":"Endpoint and method"},{"location":"estimate_multipart/#request-header","text":"Header Value Accept application/json Authorization Bearer [token]","title":"Request header"},{"location":"estimate_multipart/#request-body-and-document-format","text":"The request body and format for an Estimate request are the exact same as the Multipart Intake Request. Please refer to the Multipart Intake documentation .","title":"Request body and document format"},{"location":"intake_json/","text":"JSON Intake request Endpoint and method API version v1 Endpoint base_url/api_version/intake Method POST Request header Header Value Accept application/json Authorization Bearer [token] Request body and document format All metadata and documents must be sent in a JSON format. PDF content must be sent in a base-64 encoded string. Examples for achieving the correct format: PHP <?php $doc = base64_encode ( file_get_contents ( \u2018document . pdf\u2019 )); C# String GetBase64FileContent ( string fileName , string path ) { var file = Directory . GetFiles ( path , $\"{fileName}.*\" ). FirstOrDefault (); if ( file != null ) { Byte [] bytes = File . ReadAllBytes ( file ); String base64String = Convert . ToBase64String ( bytes ); return base64String ; } return null ; } Attention The maximum size of a JSON request is 4MB! If your payload exceeds this limit, the server will return an HTTP error 413 (entity/payload too large). If you want to send larger documents, use the Multipart Intake request . JSON Request Structure { \"document\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded document content\" , \"multiplex\" : boolea n (de fault 1 ) , }, \"attachments\" : { \"0\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" , }, \"1\" : { ... } }, \"background\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" }, \"envelope\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" }, \"carrier\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" } \"address\" : { \"firstname\" : \"string\" , \"lastname\" : \"string\" , \"fullname\" : \"string\" , \"street\" : \"string\" , \"houseNumber\" : i nte ger , \"houseNumberAlpha\" : \"string\" , \"box\" : \"string\" \"unstructuredStreetNumberBox\" : \"string\" , \"zip\" : \"string\" , \"municipality\" : \"string\" , \"countryIso2\" : \"string two letters\" , \"company\" : \"string\" , \"area\" : \"string\" }, \"correlation\" : { \"costId\" : \"optional,string\" , \"lang\" : \"string nl,fr,en,de\" , \"returnAddress: \" s tr i n g , si n gle li ne address \" }, \" pos tal Service \": { \" regis tere d \": boolean default 0, \" prior \": boolean default 0, \" n o n Prior \": boolean default 0, }, \" email \": { \" regis tere d \": boolean default 0, \" email \": \" s tr i n g email \" }, \" hook \": { \" uri \": \" Full webhook pa t h \", \" me t hod \": \" POST or GET\" } } JSON Request Values Document (required) Each Intake request must contain exactly one main document. Key Description Required Type Default document.name Name of the document YES string document.mime-type MIME type of the document. Currently only \"application/pdf\" is accepted YES string document.contents Base64-encoded contents of the document YES string document.multiplex Print setting of the document. 0 = recto, 1 = recto/verso NO boolean 1 Attachments (optional) Each Intake request may contain multiple attachments, using a consecutive numerical index (see JSON structure). Key Description Required Type Default attachments.{n}.name Name of the attachment YES, if using attachment string attachments.{n}.mime-type MIME type of the attachment. Currently only \"application/pdf\" is accepted YES string attachments.{n}.contents Base64-encoded contents of the attachment YES string attachments.{n}.multiplex Print setting of the attachment. 0 = recto, 1 = recto/verso NO boolean 1 Background (optional) Each Intake request may contain exactly 1 background. The background will only be printed on the first page of the main document. Key Description Required Type Default background.name Name of the background YES, if using background string background.mime-type MIME type of the background. Currently only \"application/pdf\" is accepted YES string background.contents Base64-encoded contents of the background YES string Envelope (optional) Each Intake request may contain exactly one envelope. Key Description Required Type Default envelope.name Name of the envelope YES, if using envelope string envelope.mime-type MIME type of the envelope. Currently only \"application/pdf\" is accepted YES string envelope.contents Base64-encoded contents of the envelope YES string Carrier (optional) for C4 envelopes Each Intake request may contain exactly one carrier. An address carrier is only used when sending C4 envelopes, which use a separate sheet of paper to print the address on. Key Description Required Type Default carrier.name Name of the address carrier YES, if using carrier string carrier.mime-type MIME type of the carrier. Currently only \"application/pdf\" is accepted YES string carrier.contents Base64-encoded contents of the carrier YES string Address (required) Each Intake request must contain exactly one recipient with the required address parts. Key Description Required Type Default address.firstname Recipient's first name YES, if address.fullname and address.company absent string address.lastname Recipient's last name YES, if address.fullname and address.company absent string address.fullname Recipient's full name YES, if address.firstname, address.lastname and address.company absent string address.company Company name YES, if address.firstname, address.lastname and address.fullname absent string address.street Street name without number YES, if address.unstructuredStreetNumberBox absent string address.houseNumber House number YES, if address.unstructuredStreetNumberBox absent string address.houseNumberAlpha House number alphanumeric, will be placed after houseNumber on envelope NO string address.box Box number NO string address.unstructuredStreetNumberBox Unstructured street, house number and box YES, if address.street and address.houseNumber absent string address.zip Zip code YES string address.municipality Municipality YES string address.countryIso2 Country code, ISO 3611-2 format (2 characters) YES string address.area Area NO string Correlation (required) Key Description Required Type Default correlation.costId Cost ID, for internal reference NO string correlation.lang Document's language, must be one of nl, fr, en, de YES string correlation.returnAddress Return address in case of undeliverable mail NO string Symeta Hybrid, Interleuvenlaan 50, 3001 Leuven Postal service (optional, default bpost non-prior) Each Intake request may contain additional postal service instructions Key Description Required Type Default postalService.registered Registered shipment with tracking (bpost) NO boolean 0 postalService.prior Prior shipment NO boolean 0 postalService.nonPrior Non-prior (standard) shipment NO boolean 1 Hook (optional) Each Intake request may specify a webhook URL and method to send status updates to Key Description Required Type Default hook.uri URI where the webhook should be sent to YES, if webhook is desired string hook.method HTTP method to be used for the webhook, must be either GET or POST YES, if webhook is desired string For more detailed information on the webhook functionality, refer to the Webhooks page. JSON Request Response Success Key Value HTTP status code 202 ACCEPTED JSON body { \"intake\": integer, \"cost\": integer } Possible error codes HTTP code Description Reason 422 Unprocessable Entity Request is invalid - either missing or incorrectly formatted parameters 413 Entity Too Large Request size exceeds 4MB limit - use the Multipart method instead 401 Unauthorized Access token is not valid or expired - refer to the web portal","title":"JSON Intake"},{"location":"intake_json/#json-intake-request","text":"","title":"JSON Intake request"},{"location":"intake_json/#endpoint-and-method","text":"API version v1 Endpoint base_url/api_version/intake Method POST","title":"Endpoint and method"},{"location":"intake_json/#request-header","text":"Header Value Accept application/json Authorization Bearer [token]","title":"Request header"},{"location":"intake_json/#request-body-and-document-format","text":"All metadata and documents must be sent in a JSON format. PDF content must be sent in a base-64 encoded string. Examples for achieving the correct format:","title":"Request body and document format"},{"location":"intake_json/#php","text":"<?php $doc = base64_encode ( file_get_contents ( \u2018document . pdf\u2019 ));","title":"PHP"},{"location":"intake_json/#c","text":"String GetBase64FileContent ( string fileName , string path ) { var file = Directory . GetFiles ( path , $\"{fileName}.*\" ). FirstOrDefault (); if ( file != null ) { Byte [] bytes = File . ReadAllBytes ( file ); String base64String = Convert . ToBase64String ( bytes ); return base64String ; } return null ; } Attention The maximum size of a JSON request is 4MB! If your payload exceeds this limit, the server will return an HTTP error 413 (entity/payload too large). If you want to send larger documents, use the Multipart Intake request .","title":"C#"},{"location":"intake_json/#json-request-structure","text":"{ \"document\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded document content\" , \"multiplex\" : boolea n (de fault 1 ) , }, \"attachments\" : { \"0\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" , }, \"1\" : { ... } }, \"background\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" }, \"envelope\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" }, \"carrier\" : { \"name\" : \"string\" , \"mime-type\" : \"mime-type\" , \"contents\" : \"base64encoded content\" } \"address\" : { \"firstname\" : \"string\" , \"lastname\" : \"string\" , \"fullname\" : \"string\" , \"street\" : \"string\" , \"houseNumber\" : i nte ger , \"houseNumberAlpha\" : \"string\" , \"box\" : \"string\" \"unstructuredStreetNumberBox\" : \"string\" , \"zip\" : \"string\" , \"municipality\" : \"string\" , \"countryIso2\" : \"string two letters\" , \"company\" : \"string\" , \"area\" : \"string\" }, \"correlation\" : { \"costId\" : \"optional,string\" , \"lang\" : \"string nl,fr,en,de\" , \"returnAddress: \" s tr i n g , si n gle li ne address \" }, \" pos tal Service \": { \" regis tere d \": boolean default 0, \" prior \": boolean default 0, \" n o n Prior \": boolean default 0, }, \" email \": { \" regis tere d \": boolean default 0, \" email \": \" s tr i n g email \" }, \" hook \": { \" uri \": \" Full webhook pa t h \", \" me t hod \": \" POST or GET\" } }","title":"JSON Request Structure"},{"location":"intake_json/#json-request-values","text":"","title":"JSON Request Values"},{"location":"intake_json/#document-required","text":"Each Intake request must contain exactly one main document. Key Description Required Type Default document.name Name of the document YES string document.mime-type MIME type of the document. Currently only \"application/pdf\" is accepted YES string document.contents Base64-encoded contents of the document YES string document.multiplex Print setting of the document. 0 = recto, 1 = recto/verso NO boolean 1","title":"Document (required)"},{"location":"intake_json/#attachments-optional","text":"Each Intake request may contain multiple attachments, using a consecutive numerical index (see JSON structure). Key Description Required Type Default attachments.{n}.name Name of the attachment YES, if using attachment string attachments.{n}.mime-type MIME type of the attachment. Currently only \"application/pdf\" is accepted YES string attachments.{n}.contents Base64-encoded contents of the attachment YES string attachments.{n}.multiplex Print setting of the attachment. 0 = recto, 1 = recto/verso NO boolean 1","title":"Attachments (optional)"},{"location":"intake_json/#background-optional","text":"Each Intake request may contain exactly 1 background. The background will only be printed on the first page of the main document. Key Description Required Type Default background.name Name of the background YES, if using background string background.mime-type MIME type of the background. Currently only \"application/pdf\" is accepted YES string background.contents Base64-encoded contents of the background YES string","title":"Background (optional)"},{"location":"intake_json/#envelope-optional","text":"Each Intake request may contain exactly one envelope. Key Description Required Type Default envelope.name Name of the envelope YES, if using envelope string envelope.mime-type MIME type of the envelope. Currently only \"application/pdf\" is accepted YES string envelope.contents Base64-encoded contents of the envelope YES string","title":"Envelope (optional)"},{"location":"intake_json/#carrier-optional-for-c4-envelopes","text":"Each Intake request may contain exactly one carrier. An address carrier is only used when sending C4 envelopes, which use a separate sheet of paper to print the address on. Key Description Required Type Default carrier.name Name of the address carrier YES, if using carrier string carrier.mime-type MIME type of the carrier. Currently only \"application/pdf\" is accepted YES string carrier.contents Base64-encoded contents of the carrier YES string","title":"Carrier (optional) for C4 envelopes"},{"location":"intake_json/#address-required","text":"Each Intake request must contain exactly one recipient with the required address parts. Key Description Required Type Default address.firstname Recipient's first name YES, if address.fullname and address.company absent string address.lastname Recipient's last name YES, if address.fullname and address.company absent string address.fullname Recipient's full name YES, if address.firstname, address.lastname and address.company absent string address.company Company name YES, if address.firstname, address.lastname and address.fullname absent string address.street Street name without number YES, if address.unstructuredStreetNumberBox absent string address.houseNumber House number YES, if address.unstructuredStreetNumberBox absent string address.houseNumberAlpha House number alphanumeric, will be placed after houseNumber on envelope NO string address.box Box number NO string address.unstructuredStreetNumberBox Unstructured street, house number and box YES, if address.street and address.houseNumber absent string address.zip Zip code YES string address.municipality Municipality YES string address.countryIso2 Country code, ISO 3611-2 format (2 characters) YES string address.area Area NO string","title":"Address (required)"},{"location":"intake_json/#correlation-required","text":"Key Description Required Type Default correlation.costId Cost ID, for internal reference NO string correlation.lang Document's language, must be one of nl, fr, en, de YES string correlation.returnAddress Return address in case of undeliverable mail NO string Symeta Hybrid, Interleuvenlaan 50, 3001 Leuven","title":"Correlation (required)"},{"location":"intake_json/#postal-service-optional-default-bpost-non-prior","text":"Each Intake request may contain additional postal service instructions Key Description Required Type Default postalService.registered Registered shipment with tracking (bpost) NO boolean 0 postalService.prior Prior shipment NO boolean 0 postalService.nonPrior Non-prior (standard) shipment NO boolean 1","title":"Postal service (optional, default bpost non-prior)"},{"location":"intake_json/#hook-optional","text":"Each Intake request may specify a webhook URL and method to send status updates to Key Description Required Type Default hook.uri URI where the webhook should be sent to YES, if webhook is desired string hook.method HTTP method to be used for the webhook, must be either GET or POST YES, if webhook is desired string For more detailed information on the webhook functionality, refer to the Webhooks page.","title":"Hook (optional)"},{"location":"intake_json/#json-request-response","text":"","title":"JSON Request Response"},{"location":"intake_json/#success","text":"Key Value HTTP status code 202 ACCEPTED JSON body { \"intake\": integer, \"cost\": integer }","title":"Success"},{"location":"intake_json/#possible-error-codes","text":"HTTP code Description Reason 422 Unprocessable Entity Request is invalid - either missing or incorrectly formatted parameters 413 Entity Too Large Request size exceeds 4MB limit - use the Multipart method instead 401 Unauthorized Access token is not valid or expired - refer to the web portal","title":"Possible error codes"},{"location":"intake_multipart/","text":"Multipart Intake Request Multipart vs JSON Using a Multipart Request allows to upload larger documents to the API. However, we do advise to use the JSON Intake Request as much as possible and avoid large filesizes. With the Multipart Request, the 4MB filesize limit does not apply. For the most part, the requests are very similar. Endpoint and method API version v1 Endpoint base_url/api_version/intake/multipart Method POST Request header Header Value Accept application/json Authorization Bearer [token] Multipart form-data Structure document[name] => 'string', document[mime-type] => 'mime-type', document[contents] => file, document[multiplex] => boolean (default 1), attachments[0][name] => 'string', attachments[0][mime-type] => 'mime-type', attachments[0][contents] => file, attachments[1][name] => ..., background[name] => 'string', background[mime-type] => 'mime-type', background[contents] => file, envelope[name] => 'string', envelope[mime-type] => 'mime-type', envelope[contents] => file, address[firstname] => 'string', address[lastname] => 'string', address[fullname] => 'string', address[street] => 'string', address[houseNumber] => integer, address[houseNumberAlpha] => 'string', address[box] => 'string', address[unstructuredStreetNumberBox] => 'string', address[zip] => 'string', address[municipality] => 'string', address[countryIso2] => 'string max 2', address[company] => 'string', address[area] => 'string', postalService[registered] => boolean, postalService[prior] => boolean, postalService[nonPrior] => boolean, correlation[costId] => 'string,optional', correlation[lang] => 'required, nl,en or fr', correlation[returnAddress] => 'optional string, single line return address', requestType => 'multipart' Multipart Form Data Values Request type (required) Add parameter requestType and set value as 'multipart' to indicate it is a multipart form. Key Description Required Type Default requestType Type of Intake request being sent YES, if multipart string Document (required) Each Multipart Intake request must contain exactly one main document. Key Description Required Type Default document[name] Name of the original document, including extension YES string document[mime-type] MIME type of the document. Currently only \"application/pdf\" is accepted YES string document[contents] Document PDF file YES file/binary document[multiplex] Print setting of the document. 0 = recto, 1 = recto/verso NO boolean 1 Attachments (optional) Each Multipart Intake request may contain multiple attachments, using a consecutive numerical index (see JSON structure). Key Description Required Type Default attachments[n][name] Name of the attachment YES, if using attachment string attachments[n][mime-type] MIME type of the attachment. Currently only \"application/pdf\" is accepted YES string attachments[n][contents] Attachment PDF file YES file/binary attachments[n][multiplex] Print setting of the attachment. 0 = recto, 1 = recto/verso NO boolean 1 Background (optional) Each Multipart Intake request may contain exactly 1 background. The background will only be printed on the first page of the main document. Key Description Required Type Default background[name] Name of the background YES, if using background string background[mime-type] MIME type of the background. Currently only \"application/pdf\" is accepted YES string background[contents] Background PDF file YES file/binary Envelope (optional) Each Multipart Intake request may contain exactly one envelope. Key Description Required Type Default envelope[name] Name of the envelope YES, if using envelope string envelope[mime-type] MIME type of the envelope. Currently only \"application/pdf\" is accepted YES string envelope[contents] Envelope PDF file YES file/binary Carrier (optional) for C4 envelopes Each Multipart Intake request may contain exactly one carrier. An address carrier is only used when sending C4 envelopes, which use a separate sheet of paper to print the address on. Key Description Required Type Default carrier[name] Name of the address carrier YES, if using carrier string carrier[mime-type] MIME type of the carrier. Currently only \"application/pdf\" is accepted YES string carrier[contents] Address carrier PDF file YES file/binary Address (required) Each Multipart Intake request must contain exactly one recipient with the required address parts. Key Description Required Type Default address[firstname] Recipient's first name YES, if address[fullname] and address[company] absent string address[lastname] Recipient's last name YES, if address[fullname] and address[company] absent string address[fullname] Recipient's full name YES, if address[firstname], address.lastname and address[company] absent string address[company] Company name YES, if address[firstname], address.lastname and address[fullname] absent string address[street] Street name without number YES, if address[unstructuredStreetNumberBox] absent string address[houseNumber] House number YES, if address[unstructuredStreetNumberBox] absent string address[houseNumberAlpha] House number alphanumeric, will be placed after houseNumber on envelope NO string address[box] Box number NO string address[unstructuredStreetNumberBox] Unstructured street, house number and box YES, if address[street] and address[houseNumber] absent string address[zip] Zip code YES string address[municipality] Municipality YES string address[countryIso2] Country code, ISO 3611-2 format (2 characters) YES string address[area] Area NO string Correlation (required) Key Description Required Type Default correlation[costId] Cost ID, for internal reference NO string correlation[lang] Document's language, must be one of nl, fr, en, de YES string correlation[returnAddress] Return address in case of undeliverable mail NO string Symeta Hybrid, Interleuvenlaan 50, 3001 Leuven Postal service (optional, default bpost non-prior) Each Intake request may contain additional postal service instructions Key Description Required Type Default postalService[registered] Registered shipment with tracking (bpost) NO boolean 0 postalService[prior] Prior shipment NO boolean 0 postalService[nonPrior] Non-prior (standard) shipment NO boolean 1 Hook (optional) Each Intake request may specify a webhook URL and method to send status updates to Key Description Required Type Default hook[uri] URI where the webhook should be sent to YES, if webhook is desired string hook[method] HTTP method to be used for the webhook, must be either GET or POST YES, if webhook is desired string For more detailed information on the webhook functionality, refer to the Webhooks page. Multipart Intake Request Response Success Key Value HTTP status code 202 ACCEPTED JSON body { \"intake\": integer, \"cost\": integer } Possible error codes HTTP code Description Reason 422 Unprocessable Entity Request is invalid - either missing or incorrectly formatted parameters 413 Entity Too Large Request size exceeds limit 401 Unauthorized Access token is not valid or expired - refer to the web portal","title":"Multipart Intake"},{"location":"intake_multipart/#multipart-intake-request","text":"","title":"Multipart Intake Request"},{"location":"intake_multipart/#multipart-vs-json","text":"Using a Multipart Request allows to upload larger documents to the API. However, we do advise to use the JSON Intake Request as much as possible and avoid large filesizes. With the Multipart Request, the 4MB filesize limit does not apply. For the most part, the requests are very similar.","title":"Multipart vs JSON"},{"location":"intake_multipart/#endpoint-and-method","text":"API version v1 Endpoint base_url/api_version/intake/multipart Method POST","title":"Endpoint and method"},{"location":"intake_multipart/#request-header","text":"Header Value Accept application/json Authorization Bearer [token]","title":"Request header"},{"location":"intake_multipart/#multipart-form-data-structure","text":"document[name] => 'string', document[mime-type] => 'mime-type', document[contents] => file, document[multiplex] => boolean (default 1), attachments[0][name] => 'string', attachments[0][mime-type] => 'mime-type', attachments[0][contents] => file, attachments[1][name] => ..., background[name] => 'string', background[mime-type] => 'mime-type', background[contents] => file, envelope[name] => 'string', envelope[mime-type] => 'mime-type', envelope[contents] => file, address[firstname] => 'string', address[lastname] => 'string', address[fullname] => 'string', address[street] => 'string', address[houseNumber] => integer, address[houseNumberAlpha] => 'string', address[box] => 'string', address[unstructuredStreetNumberBox] => 'string', address[zip] => 'string', address[municipality] => 'string', address[countryIso2] => 'string max 2', address[company] => 'string', address[area] => 'string', postalService[registered] => boolean, postalService[prior] => boolean, postalService[nonPrior] => boolean, correlation[costId] => 'string,optional', correlation[lang] => 'required, nl,en or fr', correlation[returnAddress] => 'optional string, single line return address', requestType => 'multipart'","title":"Multipart form-data Structure"},{"location":"intake_multipart/#multipart-form-data-values","text":"","title":"Multipart Form Data Values"},{"location":"intake_multipart/#request-type-required","text":"Add parameter requestType and set value as 'multipart' to indicate it is a multipart form. Key Description Required Type Default requestType Type of Intake request being sent YES, if multipart string","title":"Request type (required)"},{"location":"intake_multipart/#document-required","text":"Each Multipart Intake request must contain exactly one main document. Key Description Required Type Default document[name] Name of the original document, including extension YES string document[mime-type] MIME type of the document. Currently only \"application/pdf\" is accepted YES string document[contents] Document PDF file YES file/binary document[multiplex] Print setting of the document. 0 = recto, 1 = recto/verso NO boolean 1","title":"Document (required)"},{"location":"intake_multipart/#attachments-optional","text":"Each Multipart Intake request may contain multiple attachments, using a consecutive numerical index (see JSON structure). Key Description Required Type Default attachments[n][name] Name of the attachment YES, if using attachment string attachments[n][mime-type] MIME type of the attachment. Currently only \"application/pdf\" is accepted YES string attachments[n][contents] Attachment PDF file YES file/binary attachments[n][multiplex] Print setting of the attachment. 0 = recto, 1 = recto/verso NO boolean 1","title":"Attachments (optional)"},{"location":"intake_multipart/#background-optional","text":"Each Multipart Intake request may contain exactly 1 background. The background will only be printed on the first page of the main document. Key Description Required Type Default background[name] Name of the background YES, if using background string background[mime-type] MIME type of the background. Currently only \"application/pdf\" is accepted YES string background[contents] Background PDF file YES file/binary","title":"Background (optional)"},{"location":"intake_multipart/#envelope-optional","text":"Each Multipart Intake request may contain exactly one envelope. Key Description Required Type Default envelope[name] Name of the envelope YES, if using envelope string envelope[mime-type] MIME type of the envelope. Currently only \"application/pdf\" is accepted YES string envelope[contents] Envelope PDF file YES file/binary","title":"Envelope (optional)"},{"location":"intake_multipart/#carrier-optional-for-c4-envelopes","text":"Each Multipart Intake request may contain exactly one carrier. An address carrier is only used when sending C4 envelopes, which use a separate sheet of paper to print the address on. Key Description Required Type Default carrier[name] Name of the address carrier YES, if using carrier string carrier[mime-type] MIME type of the carrier. Currently only \"application/pdf\" is accepted YES string carrier[contents] Address carrier PDF file YES file/binary","title":"Carrier (optional) for C4 envelopes"},{"location":"intake_multipart/#address-required","text":"Each Multipart Intake request must contain exactly one recipient with the required address parts. Key Description Required Type Default address[firstname] Recipient's first name YES, if address[fullname] and address[company] absent string address[lastname] Recipient's last name YES, if address[fullname] and address[company] absent string address[fullname] Recipient's full name YES, if address[firstname], address.lastname and address[company] absent string address[company] Company name YES, if address[firstname], address.lastname and address[fullname] absent string address[street] Street name without number YES, if address[unstructuredStreetNumberBox] absent string address[houseNumber] House number YES, if address[unstructuredStreetNumberBox] absent string address[houseNumberAlpha] House number alphanumeric, will be placed after houseNumber on envelope NO string address[box] Box number NO string address[unstructuredStreetNumberBox] Unstructured street, house number and box YES, if address[street] and address[houseNumber] absent string address[zip] Zip code YES string address[municipality] Municipality YES string address[countryIso2] Country code, ISO 3611-2 format (2 characters) YES string address[area] Area NO string","title":"Address (required)"},{"location":"intake_multipart/#correlation-required","text":"Key Description Required Type Default correlation[costId] Cost ID, for internal reference NO string correlation[lang] Document's language, must be one of nl, fr, en, de YES string correlation[returnAddress] Return address in case of undeliverable mail NO string Symeta Hybrid, Interleuvenlaan 50, 3001 Leuven","title":"Correlation (required)"},{"location":"intake_multipart/#postal-service-optional-default-bpost-non-prior","text":"Each Intake request may contain additional postal service instructions Key Description Required Type Default postalService[registered] Registered shipment with tracking (bpost) NO boolean 0 postalService[prior] Prior shipment NO boolean 0 postalService[nonPrior] Non-prior (standard) shipment NO boolean 1","title":"Postal service (optional, default bpost non-prior)"},{"location":"intake_multipart/#hook-optional","text":"Each Intake request may specify a webhook URL and method to send status updates to Key Description Required Type Default hook[uri] URI where the webhook should be sent to YES, if webhook is desired string hook[method] HTTP method to be used for the webhook, must be either GET or POST YES, if webhook is desired string For more detailed information on the webhook functionality, refer to the Webhooks page.","title":"Hook (optional)"},{"location":"intake_multipart/#multipart-intake-request-response","text":"","title":"Multipart Intake Request Response"},{"location":"intake_multipart/#success","text":"Key Value HTTP status code 202 ACCEPTED JSON body { \"intake\": integer, \"cost\": integer }","title":"Success"},{"location":"intake_multipart/#possible-error-codes","text":"HTTP code Description Reason 422 Unprocessable Entity Request is invalid - either missing or incorrectly formatted parameters 413 Entity Too Large Request size exceeds limit 401 Unauthorized Access token is not valid or expired - refer to the web portal","title":"Possible error codes"},{"location":"pods/","text":"Proof of Delivery Introduction For registered mail, we have implemented bpost's Proof of Delivery API. This allows you to track your registered mail, and optionally download the POD PDF document. Endpoint and method There are 2 endpoints available for the POD's: retrieving POD information and downloading the POD document (if available). Request POD information API version v1 Endpoint base_url/api_version/proof-of-delivery/{id} Method GET Response { \"podGuid\" : \"string\" , \"podBusinessKey\" : \"miw2_\" , \"requestDateTime\" : \"2024-03-20T14:00:00+00:00\" , \"barcode\" : \"JJBEA000000000000012345\" , \"deliveryStates\" : [ { \"stateCode\" : \"PodDownloadRequestPodInfoSucceeded\" , \"stateDisplaytext\" : \"Pod download request, pod info succeeded\" , \"transitionDateTime\" : \"2023-08-01T10:00:00+02:00\" } ], \"documentInfo\" : { \"hasPodAvailable\" : true , \"hasOriginalDocumentAvailable\" : true } } Download POD document Attention This will only work if the hasPodAvailable parameter from the information request is true . API version v1 Endpoint base_url/api_version/proof-of-delivery/{id}/document Method POST Response The POD document will be returned as binary , with an application/pdf header.","title":"Proof of Delivery"},{"location":"pods/#proof-of-delivery","text":"","title":"Proof of Delivery"},{"location":"pods/#introduction","text":"For registered mail, we have implemented bpost's Proof of Delivery API. This allows you to track your registered mail, and optionally download the POD PDF document.","title":"Introduction"},{"location":"pods/#endpoint-and-method","text":"There are 2 endpoints available for the POD's: retrieving POD information and downloading the POD document (if available).","title":"Endpoint and method"},{"location":"pods/#request-pod-information","text":"API version v1 Endpoint base_url/api_version/proof-of-delivery/{id} Method GET","title":"Request POD information"},{"location":"pods/#response","text":"{ \"podGuid\" : \"string\" , \"podBusinessKey\" : \"miw2_\" , \"requestDateTime\" : \"2024-03-20T14:00:00+00:00\" , \"barcode\" : \"JJBEA000000000000012345\" , \"deliveryStates\" : [ { \"stateCode\" : \"PodDownloadRequestPodInfoSucceeded\" , \"stateDisplaytext\" : \"Pod download request, pod info succeeded\" , \"transitionDateTime\" : \"2023-08-01T10:00:00+02:00\" } ], \"documentInfo\" : { \"hasPodAvailable\" : true , \"hasOriginalDocumentAvailable\" : true } }","title":"Response"},{"location":"pods/#download-pod-document","text":"Attention This will only work if the hasPodAvailable parameter from the information request is true . API version v1 Endpoint base_url/api_version/proof-of-delivery/{id}/document Method POST","title":"Download POD document"},{"location":"pods/#response_1","text":"The POD document will be returned as binary , with an application/pdf header.","title":"Response"},{"location":"resource_request/","text":"JSON Resource Requests General A resource request returns a data collection, formatted as JSON. Resource Request Header Header Value Accept application/json Authorization Bearer [token] Available Resource Collections Intake Resource With the Intake ID received when submitting an Intake, you can retrieve all information related to that Intake. Endpoint: BASE_URI/intake/show/{intake_id} Method: GET Example: https://api.mailitwize.be/intake/show/678 { \"data\" : { \"id\" : 78754 , \"firstname\" : \"John\" , \"lastname\" : \"Doe\" , \"fullname\" : null , \"company\" : null , \"street\" : \"Fernand Scribedreef\" , \"number\" : \"1\" , \"number_alpha\" : null , \"box\" : null , \"unstructured_street\" : \"\" , \"zip\" : \"9000\" , \"municipality\" : \"Gent\" , \"country_iso2\" : \"BE\" , \"cost_id\" : null , \"status\" : \"Printing\" , \"created_at\" : \"2022-12-08T13:16:15.827000Z\" , \"updated_at\" : \"2022-12-08T13:18:05.407000Z\" , \"mailpack\" : { \"id\" : 88715 , \"intake_id\" : \"78754\" , \"name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_mailpack.pdf\" , \"pages\" : \"2\" , \"envelope_type\" : \"US\" , \"created_at\" : \"2022-12-08T13:17:08.150000Z\" , \"updated_at\" : \"2022-12-08T13:17:08.150000Z\" }, \"envelope\" : { \"id\" : 17147 , \"intake_id\" : \"78754\" , \"name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_envelope.pdf\" , \"original_name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_envelope.pdf\" , \"created_at\" : \"2022-12-08T13:16:15.857000Z\" , \"updated_at\" : \"2022-12-08T13:16:15.857000Z\" }, \"shipping_barcode\" : false , \"shipping_date\" : false } }","title":"Intake Resource"},{"location":"resource_request/#json-resource-requests","text":"","title":"JSON Resource Requests"},{"location":"resource_request/#general","text":"A resource request returns a data collection, formatted as JSON.","title":"General"},{"location":"resource_request/#resource-request-header","text":"Header Value Accept application/json Authorization Bearer [token]","title":"Resource Request Header"},{"location":"resource_request/#available-resource-collections","text":"","title":"Available Resource Collections"},{"location":"resource_request/#intake-resource","text":"With the Intake ID received when submitting an Intake, you can retrieve all information related to that Intake. Endpoint: BASE_URI/intake/show/{intake_id} Method: GET Example: https://api.mailitwize.be/intake/show/678 { \"data\" : { \"id\" : 78754 , \"firstname\" : \"John\" , \"lastname\" : \"Doe\" , \"fullname\" : null , \"company\" : null , \"street\" : \"Fernand Scribedreef\" , \"number\" : \"1\" , \"number_alpha\" : null , \"box\" : null , \"unstructured_street\" : \"\" , \"zip\" : \"9000\" , \"municipality\" : \"Gent\" , \"country_iso2\" : \"BE\" , \"cost_id\" : null , \"status\" : \"Printing\" , \"created_at\" : \"2022-12-08T13:16:15.827000Z\" , \"updated_at\" : \"2022-12-08T13:18:05.407000Z\" , \"mailpack\" : { \"id\" : 88715 , \"intake_id\" : \"78754\" , \"name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_mailpack.pdf\" , \"pages\" : \"2\" , \"envelope_type\" : \"US\" , \"created_at\" : \"2022-12-08T13:17:08.150000Z\" , \"updated_at\" : \"2022-12-08T13:17:08.150000Z\" }, \"envelope\" : { \"id\" : 17147 , \"intake_id\" : \"78754\" , \"name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_envelope.pdf\" , \"original_name\" : \"miw2_78754_231ec460-b7bd-4da4-9bd5-ed54bc08cff0_envelope.pdf\" , \"created_at\" : \"2022-12-08T13:16:15.857000Z\" , \"updated_at\" : \"2022-12-08T13:16:15.857000Z\" }, \"shipping_barcode\" : false , \"shipping_date\" : false } }","title":"Intake Resource"},{"location":"webhooks/","text":"Webhooks Introduction Once an Intake has been accepted by the API, it will receive status updates via webhooks. Currently, there are 4 possible status updates: Processed (Intake received successfully, currently being processed by our server) Printing (Intake processed and put on the print queue) Shipped (Intake printed and delivered to bpost for mail delivery) Returned (Postal item was returned to Symeta Hybrid) These webhooks will be sent to the URI you specify in the Intake, as well as using the specified method (hook.uri and hook.method). To make use of webhooks, you will need to generate a webhook key in the API interface first. This key can then be used to verify the contents of the webhook's payload as follows. Calculate the SHA-256 hash of the JSON payload, using the webhook key as key. If this hash matches the hash that is sent in the header value, the payload is valid. For example, in PHP: <?php $hash = hash_hmac ( 'sha256' , $jsonPayload , $webhookKey ); if ( $hash === $responseHeader ) { // Payload contents verified // ... } Structure Each webhook will be sent as an application/json payload. The webhook payload will contain a JSON body with the following keys and header: Header Value Signature SHA-256 hash The payloads are as follows, for each status: Processed { \"intake\" : 158056 , \"status\" : \"Processed\" , \"data\" : \"\" } Printing { \"intake\" : 158056 , \"status\" : \"Printing\" } Shipped { \"intake\" : 158056 , \"status\" : \"Shipped\" , \"data\" : { \"bpost\" : \"JJBEA000000000000012345\" , \"shipping_date\" : \"15-03-2024\" }, \"type\" : \"status_update\" } Returned { \"intake\" : 158056 , \"status\" : \"Returned\" , \"data\" : { \"barcode\" : \"JJBEA000000000000012345\" , \"reasonCode\" : \"S11\" , \"reasonDescription\" : \"Ontvangt de briefwisseling niet op aangeduid adres\" , \"scanned_at\" : \"2024-03-17 12:00:00\" }, \"type\" : \"status_update\" }","title":"Webhooks"},{"location":"webhooks/#webhooks","text":"","title":"Webhooks"},{"location":"webhooks/#introduction","text":"Once an Intake has been accepted by the API, it will receive status updates via webhooks. Currently, there are 4 possible status updates: Processed (Intake received successfully, currently being processed by our server) Printing (Intake processed and put on the print queue) Shipped (Intake printed and delivered to bpost for mail delivery) Returned (Postal item was returned to Symeta Hybrid) These webhooks will be sent to the URI you specify in the Intake, as well as using the specified method (hook.uri and hook.method). To make use of webhooks, you will need to generate a webhook key in the API interface first. This key can then be used to verify the contents of the webhook's payload as follows. Calculate the SHA-256 hash of the JSON payload, using the webhook key as key. If this hash matches the hash that is sent in the header value, the payload is valid. For example, in PHP: <?php $hash = hash_hmac ( 'sha256' , $jsonPayload , $webhookKey ); if ( $hash === $responseHeader ) { // Payload contents verified // ... }","title":"Introduction"},{"location":"webhooks/#structure","text":"Each webhook will be sent as an application/json payload. The webhook payload will contain a JSON body with the following keys and header: Header Value Signature SHA-256 hash The payloads are as follows, for each status:","title":"Structure"},{"location":"webhooks/#processed","text":"{ \"intake\" : 158056 , \"status\" : \"Processed\" , \"data\" : \"\" }","title":"Processed"},{"location":"webhooks/#printing","text":"{ \"intake\" : 158056 , \"status\" : \"Printing\" }","title":"Printing"},{"location":"webhooks/#shipped","text":"{ \"intake\" : 158056 , \"status\" : \"Shipped\" , \"data\" : { \"bpost\" : \"JJBEA000000000000012345\" , \"shipping_date\" : \"15-03-2024\" }, \"type\" : \"status_update\" }","title":"Shipped"},{"location":"webhooks/#returned","text":"{ \"intake\" : 158056 , \"status\" : \"Returned\" , \"data\" : { \"barcode\" : \"JJBEA000000000000012345\" , \"reasonCode\" : \"S11\" , \"reasonDescription\" : \"Ontvangt de briefwisseling niet op aangeduid adres\" , \"scanned_at\" : \"2024-03-17 12:00:00\" }, \"type\" : \"status_update\" }","title":"Returned"}]}